#!/bin/bash

ADMIN_PORT=10000
DOCKERCMD=$(command -v docker)
SCR_DIR=$(cd `dirname $0` && pwd)
LOG_PATH=${SCR_DIR}/_adminData/_log
MAIN_NET="10.10.10"
MAIN_IP="10.10.10.254"

if  [ "$DOCKERCMD" = "" ]; then
    echo "\nDocker should be installed!" >> ${LOG_PATH}/easyDockerLog.data
    exit 1
fi

mkdir -p ${LOG_PATH}
NETWORK_NAME=network_easydocker
if [ -z $(docker network ls --filter name=^${NETWORK_NAME}$ --format="{{ .Name }}") ] ; then 
    docker network create \
        --driver=bridge \
        --subnet=${MAIN_NET}.0/16 \
        --ip-range=${MAIN_NET}.0/24 \
        --gateway=${MAIN_IP} \
       network_easydocker &> /dev/null
fi

docker stop $(docker ps -a -q)
docker rm $(docker ps -a -q)

#--- start admin docker ---
echo "Start admin .." >> ${LOG_PATH}/easyDockerLog.data
cd ${SCR_DIR}/admin/dockerSetting

docker build -f dockerFile -t admin-image .

#  --restart=always
echo docker run -it -p ${ADMIN_PORT}:80 \
    -v "${SCR_DIR}/admin/app":/var/_localApp  -v "${SCR_DIR}/_adminData":/var/_localAppData  \
    -v "${SCR_DIR}/_easydocker_KEY":/var/_localAppKey \
    --network network_easydocker   --name admin-container admin-image

exit 0
#--- Main common cron loop ---
stsCron=1
until [ $stsCron = 0 ]
do 
    if [ $stsCron != 0 ] ; then
        sh ${SCR_DIR}/_commCron.sh &
    fi
    sleep 1
done
